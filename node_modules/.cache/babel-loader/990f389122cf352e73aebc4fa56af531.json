{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Synonyms.js\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport { StyledList } from \"../styled-components/Synonyms-styling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Synonyms(props) {\n  if (props.synonyms) {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"synonyms d-inline\",\n        children: props.synonyms.map(function (synonym, index) {\n          return /*#__PURE__*/_jsxDEV(StyledList, {\n            className: \"d-inline p-2\",\n            children: synonym\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Synonyms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Synonyms\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Synonyms.js"],"names":["React","Row","StyledList","Synonyms","props","synonyms","map","synonym","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,UAAT,QAA2B,uCAA3B;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,wBACE,QAAC,GAAD;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,kBACGD,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AAC5C,8BACE,QAAC,UAAD;AAAwB,YAAA,SAAS,EAAC,cAAlC;AAAA,sBACGD;AADH,aAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO;AACL,WAAO,IAAP;AACD;AACF;KAlBuBL,Q","sourcesContent":["import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport { StyledList } from \"../styled-components/Synonyms-styling\";\n\nexport default function Synonyms(props) {\n  if (props.synonyms) {\n    return (\n      <Row>\n        <ul className='synonyms d-inline'>\n          {props.synonyms.map(function (synonym, index) {\n            return (\n              <StyledList key={index} className='d-inline p-2'>\n                {synonym}\n              </StyledList>\n            );\n          })}\n        </ul>\n      </Row>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}