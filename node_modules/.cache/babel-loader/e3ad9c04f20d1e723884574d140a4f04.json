{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Descriptions.js\";\nimport React from \"react\";\nimport Meaning from \"./Meaning\";\nimport ImageGrid from \"./ImagesGrid\";\nimport Phonetics from \"./Phonetics\";\nimport { StyledRow, StyledCol, StyledWord, Section } from \"../styled-components/Descriptions-styling\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Descriptions(props) {\n  if (props.data) {\n    return /*#__PURE__*/_jsxDEV(StyledRow, {\n      className: \"descriptions\",\n      children: [/*#__PURE__*/_jsxDEV(StyledCol, {\n        children: /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(StyledWord, {\n            children: props.data.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), props.data.phonetics.map(function (audio, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Phonetics, {\n                audios: props.data.phonetics,\n                text: props.data.phonetics[0].text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCol, {\n        children: props.data.meanings.map(function (meaning, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Meaning, {\n              data: meaning\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n        images: props.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Descriptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Descriptions\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Descriptions.js"],"names":["React","Meaning","ImageGrid","Phonetics","StyledRow","StyledCol","StyledWord","Section","Descriptions","props","data","word","phonetics","map","audio","index","text","meanings","meaning","images"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,OAJF,QAKO,2CALP;;AAOA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACd,wBACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,cAArB;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,OAAD;AAAA,kCACE,QAAC,UAAD;AAAA,sBAAaD,KAAK,CAACC,IAAN,CAAWC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,EAGGF,KAAK,CAACC,IAAN,CAAWE,SAAX,CAAqBC,GAArB,CAAyB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAChD,gCACE;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,MAAM,EAAEN,KAAK,CAACC,IAAN,CAAWE,SADrB;AAEE,gBAAA,IAAI,EAAEH,KAAK,CAACC,IAAN,CAAWE,SAAX,CAAqB,CAArB,EAAwBI;AAFhC;AAAA;AAAA;AAAA;AAAA;AADF,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,SAAD;AAAA,kBACGN,KAAK,CAACC,IAAN,CAAWO,QAAX,CAAoBJ,GAApB,CAAwB,UAAUK,OAAV,EAAmBH,KAAnB,EAA0B;AACjD,8BACE;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,IAAI,EAAEG;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,aAAUH,KAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA,cAjBF,eA0BE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEN,KAAK,CAACU;AAAzB;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD,GA/BD,MA+BO;AACL,WAAO,IAAP;AACD;AACF;KAnCuBX,Y","sourcesContent":["import React from \"react\";\nimport Meaning from \"./Meaning\";\nimport ImageGrid from \"./ImagesGrid\";\nimport Phonetics from \"./Phonetics\";\nimport {\n  StyledRow,\n  StyledCol,\n  StyledWord,\n  Section,\n} from \"../styled-components/Descriptions-styling\";\n\nexport default function Descriptions(props) {\n  if (props.data) {\n    return (\n      <StyledRow className='descriptions'>\n        <StyledCol>\n          <Section>\n            <StyledWord>{props.data.word}</StyledWord>\n\n            {props.data.phonetics.map(function (audio, index) {\n              return (\n                <div key={index}>\n                  <Phonetics\n                    audios={props.data.phonetics}\n                    text={props.data.phonetics[0].text}\n                  />\n                </div>\n              );\n            })}\n          </Section>\n        </StyledCol>\n        <StyledCol>\n          {props.data.meanings.map(function (meaning, index) {\n            return (\n              <div key={index}>\n                <Meaning data={meaning} />\n              </div>\n            );\n          })}\n        </StyledCol>\n        <ImageGrid images={props.images} />\n      </StyledRow>\n    );\n  } else {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}