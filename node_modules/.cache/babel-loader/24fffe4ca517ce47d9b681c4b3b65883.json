{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-Dictionary/dictionary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { GlobalStyles } from \"./global\"; // The function that toggles between themes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  }; // Return the layout based on the current theme\n\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        children: \"Toggle theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"It's a light theme!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-Dictionary/dictionary/src/App.js"],"names":["React","useState","ThemeProvider","lightTheme","darkTheme","GlobalStyles","App","theme","setTheme","toggleTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,YAAT,QAA6B,UAA7B,C,CAEA;;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND,CAFa,CAUb;;;AACA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBJ,UAApB,GAAiCC,SAAvD;AAAA,2BACE;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GArBQH,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { GlobalStyles } from \"./global\";\n\n// The function that toggles between themes\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  // Return the layout based on the current theme\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <GlobalStyles />\n        <button onClick={toggleTheme}>Toggle theme</button>\n        <h1>It's a light theme!</h1>\n        <footer></footer>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}