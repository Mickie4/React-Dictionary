{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-Dictionary/dictionary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./StyledElements/theme\";\nimport { GlobalStyles } from \"./StyledElements/global\";\nimport { ToggleContainer } from \"./StyledElements/ToggleStyled\";\nimport toggleIcon from \"./icons/sun\"; // The function that toggles between themes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [theme, setTheme] = useState(\"light\");\n\n  function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === \"light\" ? lightTheme : darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Dictionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleContainer, {\n      onClick: toggleTheme,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: toggleIcon,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1NR3O0/bzzhjlLyt740h+JhxH9c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-Dictionary/dictionary/src/App.js"],"names":["React","useState","ThemeProvider","lightTheme","darkTheme","GlobalStyles","ToggleContainer","toggleIcon","App","theme","setTheme","toggleTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,wBAAtC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CAEA;;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,OAAD,CAAlC;;AACA,WAASU,WAAT,GAAuB;AACrB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF;;AAED,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBN,UAApB,GAAiCC,SAAvD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEO,WAA1B;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEJ,UAAV;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApBuBC,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./StyledElements/theme\";\nimport { GlobalStyles } from \"./StyledElements/global\";\nimport { ToggleContainer } from \"./StyledElements/ToggleStyled\";\nimport toggleIcon from \"./icons/sun\";\n\n// The function that toggles between themes\nexport default function App() {\n  const [theme, setTheme] = useState(\"light\");\n  function toggleTheme() {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <h1>React Dictionary</h1>\n      <ToggleContainer onClick={toggleTheme}>\n        <img src={toggleIcon} alt='' />\n      </ToggleContainer>\n      <footer></footer>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}