{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input, SearchBtn } from \"../styled-components/Search-styling\";\nimport Descriptions from \"./Descriptions\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [keyword, setKeyword] = useState(\"null\");\n  const [dictionaryData, setDictionaryData] = useState({});\n\n  function showResults(response) {\n    console.log(response.data[0].meanings[2].definitions[1].synonyms[0]);\n    setDictionaryData({\n      word: response.data[0].word,\n      phonetics: response.data[0].phonetics[0].text,\n      noun: response.data[0].meanings[0].partOfSpeech,\n      meaning: response.data[0].meanings[0].definitions[0].definition,\n      synonyms: response.data[0].meanings[2].definitions[0].synonyms[0],\n      example: response.data[0].meanings[0].definitions[0].example\n    });\n  }\n\n  function search(event) {\n    event.preventDefault();\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(showResults);\n  }\n\n  function handleKeyword(event) {\n    setKeyword(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        className: \"d-block text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: search,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search for a word\",\n            type: \"search\",\n            autoFocus: true,\n            onChange: handleKeyword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchBtn, {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n      data: dictionaryData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"OBk89Tm7dlDKxhZ69N+vWWMiQpQ=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Search.js"],"names":["React","useState","Input","SearchBtn","Descriptions","Col","Row","axios","Search","keyword","setKeyword","dictionaryData","setDictionaryData","showResults","response","console","log","data","meanings","definitions","synonyms","word","phonetics","text","noun","partOfSpeech","meaning","definition","example","search","event","preventDefault","apiUrl","get","then","handleKeyword","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,qCAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;;AAEA,WAASY,WAAT,CAAqBC,QAArB,EAA+B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,WAA7B,CAAyC,CAAzC,EAA4CC,QAA5C,CAAqD,CAArD,CAAZ;AACAR,IAAAA,iBAAiB,CAAC;AAChBS,MAAAA,IAAI,EAAEP,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBI,IADP;AAEhBC,MAAAA,SAAS,EAAER,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBK,SAAjB,CAA2B,CAA3B,EAA8BC,IAFzB;AAGhBC,MAAAA,IAAI,EAAEV,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BO,YAHnB;AAIhBC,MAAAA,OAAO,EAAEZ,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,WAA7B,CAAyC,CAAzC,EAA4CQ,UAJrC;AAKhBP,MAAAA,QAAQ,EAAEN,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,WAA7B,CAAyC,CAAzC,EAA4CC,QAA5C,CAAqD,CAArD,CALM;AAMhBQ,MAAAA,OAAO,EAAEd,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,WAA7B,CAAyC,CAAzC,EAA4CS;AANrC,KAAD,CAAjB;AAQD;;AAED,WAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,MAAM,GAAI,sDAAqDvB,OAAQ,EAA3E;AACAF,IAAAA,KAAK,CAAC0B,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBrB,WAAvB;AACD;;AAED,WAASsB,aAAT,CAAuBL,KAAvB,EAA8B;AAC5BpB,IAAAA,UAAU,CAACoB,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAV;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,eACG,GADH,eAEE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,SAAS,EAAC,0BAAvB;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAER,MAAhB;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,WAAW,EAAC,mBADd;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAE,IAHb;AAIE,YAAA,QAAQ,EAAEM;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAExB;AAApB;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3CuBH,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\nimport { Input, SearchBtn } from \"../styled-components/Search-styling\";\nimport Descriptions from \"./Descriptions\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport axios from \"axios\";\nexport default function Search() {\n  const [keyword, setKeyword] = useState(\"null\");\n  const [dictionaryData, setDictionaryData] = useState({});\n\n  function showResults(response) {\n    console.log(response.data[0].meanings[2].definitions[1].synonyms[0]);\n    setDictionaryData({\n      word: response.data[0].word,\n      phonetics: response.data[0].phonetics[0].text,\n      noun: response.data[0].meanings[0].partOfSpeech,\n      meaning: response.data[0].meanings[0].definitions[0].definition,\n      synonyms: response.data[0].meanings[2].definitions[0].synonyms[0],\n      example: response.data[0].meanings[0].definitions[0].example,\n    });\n  }\n\n  function search(event) {\n    event.preventDefault();\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(showResults);\n  }\n\n  function handleKeyword(event) {\n    setKeyword(event.target.value);\n  }\n  return (\n    <div className='search'>\n      {\" \"}\n      <Row>\n        <Col md={12} className='d-block text-center mt-3'>\n          <form onSubmit={search}>\n            <Input\n              placeholder='Search for a word'\n              type='search'\n              autoFocus={true}\n              onChange={handleKeyword}></Input>\n            <SearchBtn>Search</SearchBtn>\n          </form>\n        </Col>\n      </Row>\n      <Descriptions data={dictionaryData} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}