{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { StyledInput, StyledBtn, StyledCol, StyledContainer, StyledRow, Section, StyledForm } from \"../styled-components/Search-styling\";\nimport Descriptions from \"./Descriptions\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [keyword, setKeyword] = useState(\"null\");\n  const [dictionaryData, setDictionaryData] = useState(null);\n  const [imagesData, setImagesData] = useState(null); //Pexels API's response\n\n  function handleImagesResponse(response) {\n    setImagesData(response.data.photos);\n  } //Dictionary API's response\n\n\n  function showResults(response) {\n    setDictionaryData(response.data[0]);\n  }\n\n  function search(event) {\n    event.preventDefault();\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(showResults);\n    let pexelsApiKey = \"563492ad6f917000010000014e51b8f2262f470ab9ebbbfad12ff71f\";\n    let pexelsUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=6&size=small`;\n    axios.get(pexelsUrl, {\n      headers: {\n        Authorization: `Bearer ${pexelsApiKey}`\n      }\n    }).then(handleImagesResponse);\n  } //Here its where the keyword is defined\n\n\n  function handleKeyword(event) {\n    setKeyword(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    className: \"search\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(StyledRow, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(StyledCol, {\n          children: [/*#__PURE__*/_jsxDEV(StyledForm, {\n            onSubmit: search,\n            children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n              placeholder: \"Search for a word\",\n              type: \"search\",\n              onChange: handleKeyword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledBtn, {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n      data: dictionaryData,\n      images: imagesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"MBgvwkzet/GnwLUxpbjoNZrhHYw=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/React-Dictionary/src/components/Search.js"],"names":["React","useState","StyledInput","StyledBtn","StyledCol","StyledContainer","StyledRow","Section","StyledForm","Descriptions","axios","Search","keyword","setKeyword","dictionaryData","setDictionaryData","imagesData","setImagesData","handleImagesResponse","response","data","photos","showResults","search","event","preventDefault","apiUrl","get","then","pexelsApiKey","pexelsUrl","headers","Authorization","handleKeyword","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,eAJF,EAKEC,SALF,EAMEC,OANF,EAOEC,UAPF,QAQO,qCARP;AASA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,IAAD,CAA5C,CAH+B,CAK/B;;AACA,WAASiB,oBAAT,CAA8BC,QAA9B,EAAwC;AACtCF,IAAAA,aAAa,CAACE,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAb;AACD,GAR8B,CAS/B;;;AACA,WAASC,WAAT,CAAqBH,QAArB,EAA+B;AAC7BJ,IAAAA,iBAAiB,CAACI,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAjB;AACD;;AAED,WAASG,MAAT,CAAgBC,KAAhB,EAAuB;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,MAAM,GAAI,sDAAqDd,OAAQ,EAA3E;AACAF,IAAAA,KAAK,CAACiB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBN,WAAvB;AAEA,QAAIO,YAAY,GACd,0DADF;AAEA,QAAIC,SAAS,GAAI,0CAAyClB,OAAQ,wBAAlE;AACAF,IAAAA,KAAK,CACFiB,GADH,CACOG,SADP,EACkB;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,YAAa;AAAxC;AAAX,KADlB,EAEGD,IAFH,CAEQV,oBAFR;AAGD,GAzB8B,CA2B/B;;;AACA,WAASe,aAAT,CAAuBT,KAAvB,EAA8B;AAC5BX,IAAAA,UAAU,CAACW,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAV;AACD;;AACD,sBACE,QAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA,eACG,GADH,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,SAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,QAAQ,EAAEZ,MAAtB;AAAA,oCACE,QAAC,WAAD;AACE,cAAA,WAAW,EAAC,mBADd;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,QAAQ,EAAEU;AAHZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEnB,cAApB;AAAoC,MAAA,MAAM,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAnDuBL,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  StyledInput,\n  StyledBtn,\n  StyledCol,\n  StyledContainer,\n  StyledRow,\n  Section,\n  StyledForm,\n} from \"../styled-components/Search-styling\";\nimport Descriptions from \"./Descriptions\";\nimport axios from \"axios\";\nexport default function Search() {\n  const [keyword, setKeyword] = useState(\"null\");\n  const [dictionaryData, setDictionaryData] = useState(null);\n  const [imagesData, setImagesData] = useState(null);\n\n  //Pexels API's response\n  function handleImagesResponse(response) {\n    setImagesData(response.data.photos);\n  }\n  //Dictionary API's response\n  function showResults(response) {\n    setDictionaryData(response.data[0]);\n  }\n\n  function search(event) {\n    event.preventDefault();\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(showResults);\n\n    let pexelsApiKey =\n      \"563492ad6f917000010000014e51b8f2262f470ab9ebbbfad12ff71f\";\n    let pexelsUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=6&size=small`;\n    axios\n      .get(pexelsUrl, { headers: { Authorization: `Bearer ${pexelsApiKey}` } })\n      .then(handleImagesResponse);\n  }\n\n  //Here its where the keyword is defined\n  function handleKeyword(event) {\n    setKeyword(event.target.value);\n  }\n  return (\n    <StyledContainer className='search'>\n      {\" \"}\n      <StyledRow>\n        <Section>\n          <StyledCol>\n            <StyledForm onSubmit={search}>\n              <StyledInput\n                placeholder='Search for a word'\n                type='search'\n                onChange={handleKeyword}></StyledInput>\n              <StyledBtn>Search</StyledBtn>\n            </StyledForm>\n            <p>Hello</p>\n          </StyledCol>\n        </Section>\n      </StyledRow>\n      <Descriptions data={dictionaryData} images={imagesData} />\n    </StyledContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}